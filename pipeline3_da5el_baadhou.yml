stages:
  - build
  - deply

# workflow:
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#     - if: $CI_COMMIT_TAG
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Building Docker images"
    - docker-compose -f docker-compose.yml build
    - docker-compose -f docker-compose.yml up -d
  # only:
  #   - /^release-\d+\.\d+\.\d+$/

deploy_images:
  stage: deply
  image: docker:20.10.16
  script:
    - service docker start
    - docker images

  # only:
  #   - /^release-\d+\.\d+\.\d+$/
# integration_test:
#   stage: integration_test
#   image: cypress/browsers:node18.12.0-chrome107
#   script:
#     - echo "Running integration tests"
#     - cd react # Move to the "react" folder
#     - npm install
#     - npx cypress run
# only:
#   - /^release-\d+\.\d+\.\d+$/



###############################################################################


stages:
  - build1
  # - build2


# This file is a template, and might need editing before it works on your project.
docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build1
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER_2" -p "$CI_REGISTRY_PASSWORD_2" $CI_REGISTRY_2
  script:
    - docker-compose -f docker-compose.yml build
    - docker-compose -f docker-compose.yml up -d
    - docker images
    - docker tag projet-devops-task_crud_frontend hatem782/app-front:v1.0.0
    - docker tag projet-devops-task_crud_backend hatem782/app-back:v1.0.0
    - docker images
    - docker push hatem782/app-front:v1.0.0
    - docker push hatem782/app-back:v1.0.0
  # only:
  #   - master

# docker-build:
#   # Official docker image.
#   image: docker:latest
#   stage: build2
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER_2" -p "$CI_REGISTRY_PASSWORD_2" $CI_REGISTRY_2
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#   except:
#     - master